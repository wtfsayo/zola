import { createOpenRouter } from "@openrouter/ai-sdk-provider"
import { ModelConfig } from "../types"

const openrouterModels: ModelConfig[] = [
  {
    id: "openai/gpt-4o-mini",
    name: "GPT-4o Mini (OpenRouter)",
    provider: "OpenAI",
    providerId: "openrouter",
    modelFamily: "GPT-4o",
    description: "Affordable and intelligent small model for fast, lightweight tasks via OpenRouter",
    tags: ["fast", "cheap", "vision", "multimodal", "openrouter"],
    contextWindow: 128000,
    inputCost: 0.15,
    outputCost: 0.6,
    priceUnit: "per 1M tokens",
    vision: true,
    tools: true,
    audio: false,
    openSource: false,
    speed: "Fast",
    intelligence: "Medium",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/openai/gpt-4o-mini",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("openai/gpt-4o-mini"),
  },
  {
    id: "openai/gpt-4o",
    name: "GPT-4o (OpenRouter)",
    provider: "OpenAI",
    providerId: "openrouter",
    modelFamily: "GPT-4o",
    description: "Flagship model that's faster and cheaper than GPT-4 Turbo with stronger vision via OpenRouter",
    tags: ["vision", "tools", "multimodal", "flagship", "openrouter"],
    contextWindow: 128000,
    inputCost: 5.0,
    outputCost: 15.0,
    priceUnit: "per 1M tokens",
    vision: true,
    tools: true,
    audio: false,
    openSource: false,
    speed: "Medium",
    intelligence: "High",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/openai/gpt-4o",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("openai/gpt-4o"),
  },
  {
    id: "anthropic/claude-3.5-sonnet",
    name: "Claude 3.5 Sonnet (OpenRouter)",
    provider: "Anthropic",
    providerId: "openrouter",
    modelFamily: "Claude 3.5",
    description: "Balanced Claude model for general-purpose chat and reasoning via OpenRouter",
    tags: ["balanced", "reasoning", "flagship", "openrouter"],
    contextWindow: 200000,
    inputCost: 3.0,
    outputCost: 15.0,
    priceUnit: "per 1M tokens",
    vision: true,
    tools: true,
    audio: false,
    reasoning: true,
    openSource: false,
    speed: "Medium",
    intelligence: "High",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/anthropic/claude-3.5-sonnet",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("anthropic/claude-3.5-sonnet"),
  },
  {
    id: "anthropic/claude-3.5-haiku",
    name: "Claude 3.5 Haiku (OpenRouter)",
    provider: "Anthropic",
    providerId: "openrouter",
    modelFamily: "Claude 3.5",
    description: "Lightweight Claude model optimized for fast, low-cost output via OpenRouter",
    tags: ["fast", "cheap", "lightweight", "openrouter"],
    contextWindow: 200000,
    inputCost: 0.25,
    outputCost: 1.25,
    priceUnit: "per 1M tokens",
    vision: true,
    tools: true,
    audio: false,
    reasoning: false,
    openSource: false,
    speed: "Fast",
    intelligence: "Medium",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/anthropic/claude-3.5-haiku",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("anthropic/claude-3.5-haiku"),
  },
  {
    id: "google/gemini-2.0-flash-exp",
    name: "Gemini 2.0 Flash (OpenRouter)",
    provider: "Google",
    providerId: "openrouter",
    modelFamily: "Gemini",
    description: "Latest Gemini Flash model with multimodal capabilities via OpenRouter",
    tags: ["fast", "multimodal", "vision", "experimental", "openrouter"],
    contextWindow: 1000000,
    inputCost: 0.075,
    outputCost: 0.3,
    priceUnit: "per 1M tokens",
    vision: true,
    tools: true,
    audio: true,
    reasoning: false,
    openSource: false,
    speed: "Fast",
    intelligence: "Medium",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/google/gemini-2.0-flash-exp",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("google/gemini-2.0-flash-exp"),
  },
  {
    id: "mistralai/mistral-large",
    name: "Mistral Large (OpenRouter)",
    provider: "Mistral",
    providerId: "openrouter",
    modelFamily: "Mistral",
    description: "Mistral's top-tier model with advanced reasoning via OpenRouter",
    tags: ["reasoning", "flagship", "openrouter"],
    contextWindow: 128000,
    inputCost: 2.0,
    outputCost: 6.0,
    priceUnit: "per 1M tokens",
    vision: false,
    tools: true,
    audio: false,
    reasoning: true,
    openSource: false,
    speed: "Medium",
    intelligence: "High",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/mistralai/mistral-large",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("mistralai/mistral-large"),
  },
  {
    id: "meta-llama/llama-3.2-3b-instruct:free",
    name: "Llama 3.2 3B (Free)",
    provider: "Meta",
    providerId: "openrouter",
    modelFamily: "Llama 3.2",
    description: "Free Llama 3.2 3B model for lightweight tasks via OpenRouter",
    tags: ["free", "open-source", "lightweight", "openrouter"],
    contextWindow: 131072,
    inputCost: 0.0,
    outputCost: 0.0,
    priceUnit: "free",
    vision: false,
    tools: true,
    audio: false,
    reasoning: true,
    openSource: true,
    speed: "Fast",
    intelligence: "Medium",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/meta-llama/llama-3.2-3b-instruct:free",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("meta-llama/llama-3.2-3b-instruct:free"),
  },
  {
    id: "qwen/qwen-2.5-coder-32b-instruct",
    name: "Qwen 2.5 Coder 32B",
    provider: "Alibaba",
    providerId: "openrouter",
    modelFamily: "Qwen 2.5",
    description: "Specialized coding model optimized for programming tasks via OpenRouter",
    tags: ["coding", "programming", "open-source", "openrouter"],
    contextWindow: 32768,
    inputCost: 0.18,
    outputCost: 0.18,
    priceUnit: "per 1M tokens",
    vision: false,
    tools: true,
    audio: false,
    reasoning: true,
    openSource: true,
    speed: "Medium",
    intelligence: "High",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/qwen/qwen-2.5-coder-32b-instruct",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("qwen/qwen-2.5-coder-32b-instruct"),
  },
  {
    id: "x-ai/grok-2-vision-1212",
    name: "Grok 2 Vision (OpenRouter)",
    provider: "xAI",
    providerId: "openrouter",
    modelFamily: "Grok",
    description: "Vision-capable variant of Grok 2 for multimodal use via OpenRouter",
    tags: ["vision", "multimodal", "reasoning", "openrouter"],
    contextWindow: 128000,
    inputCost: 2.5,
    outputCost: 12.5,
    priceUnit: "per 1M tokens",
    vision: true,
    tools: true,
    audio: false,
    reasoning: true,
    openSource: false,
    speed: "Medium",
    intelligence: "High",
    website: "https://openrouter.ai",
    apiDocs: "https://openrouter.ai/docs",
    modelPage: "https://openrouter.ai/models/x-ai/grok-2-vision-1212",
    apiSdk: () =>
      createOpenRouter({
        apiKey: process.env.OPENROUTER_API_KEY,
      }).chat("x-ai/grok-2-vision-1212"),
  },
]

export { openrouterModels } 